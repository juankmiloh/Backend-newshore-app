from sqlalchemy.sql import text


class EstratificacionRepository:
    def __init__(self, db):
        self.db = db

    def get_estratificacion_bd(self, servicio, anio, mes, empresa, dpto, mpio, cpoblado, opcion):
        if dpto == 'TODOS':
            dpto = 0
        if opcion == 1:
            print('OPCION --> ', opcion)
            # Estratos registrados por el prestador iguales a los de la alcaldía
            sql = '''
                SELECT ESTRATIFICACION.*, (USUARIOS - ALCALDIA_CONTEO) AS VALIDACION FROM (
                SELECT SUM_CON_ANO, SUM_CON_PERIODO, CODIGO_CENTRO_POBLADO, CENTRO_POBLADO, LONGITUD, LATITUD, SUM_CON_ESTRATO, SUM(USUARIOS) AS USUARIOS, ALCALDIA_CONTEO
                FROM ESTRATIFICACION_ODS
                WHERE SUM_CON_ANO=:ANIO_ARG
                AND SUM_CON_PERIODO=:MES_ARG
                AND SUM_CON_SERVICIO=:SERVICIO_ARG
                AND (IDENTIFICADOR_EMPRESA=:EMPRESA_ARG OR 0=:EMPRESA_ARG) --ID_ESP (REMPLAZAR EL 2103 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_DEPTO=:DPTO_ARG OR 0=:DPTO_ARG) --CODDEPTO (REMPLAZAR EL 8 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_MUNICIPIO=:MPO_ARG OR 'TODOS'=:MPO_ARG) --CODMPIO (REMPLAZAR EL 1 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_CNRPBLADO=:CPOBLADO_ARG OR 'TODOS' =:CPOBLADO_ARG) --CODCPOBLADO (REMPLAZAR EL 0 POR LA VARIABLE DEL FRONT)
                AND ALCALDIA_CONTEO IS NOT NULL
                GROUP BY SUM_CON_ANO, SUM_CON_PERIODO, CODIGO_CENTRO_POBLADO, CENTRO_POBLADO, LONGITUD, LATITUD, SUM_CON_ESTRATO, ALCALDIA_CONTEO
                ORDER BY SUM_CON_ESTRATO
                ) ESTRATIFICACION
                WHERE (USUARIOS - ALCALDIA_CONTEO) = 0 -- CANTIDAD DE USUARIOS SUI IGUALES A LOS DE LA ALCALDIA
                ORDER BY 4
            '''
        elif opcion == 2:
            # Estratos registrados por el prestador diferentes a los de la alcaldía
            sql = '''
                SELECT ESTRATIFICACION.*, (USUARIOS - ALCALDIA_CONTEO) AS VALIDACION FROM (
                SELECT SUM_CON_ANO, SUM_CON_PERIODO, CODIGO_CENTRO_POBLADO, CENTRO_POBLADO, LONGITUD, LATITUD, SUM_CON_ESTRATO, SUM(USUARIOS) AS USUARIOS, ALCALDIA_CONTEO
                FROM ESTRATIFICACION_ODS
                WHERE SUM_CON_ANO=:ANIO_ARG
                AND SUM_CON_PERIODO=:MES_ARG
                AND SUM_CON_SERVICIO=:SERVICIO_ARG
                AND (IDENTIFICADOR_EMPRESA=:EMPRESA_ARG OR 0 = :EMPRESA_ARG) --ID_ESP (REMPLAZAR EL 2103 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_DEPTO=:DPTO_ARG OR 0= :DPTO_ARG) --CODDEPTO (REMPLAZAR EL 8 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_MUNICIPIO=:MPO_ARG OR 'TODOS' = :MPO_ARG) --CODMPIO (REMPLAZAR EL 1 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_CNRPBLADO=:CPOBLADO_ARG OR 'TODOS' = :CPOBLADO_ARG) --CODCPOBLADO (REMPLAZAR EL 0 POR LA VARIABLE DEL FRONT)
                AND ALCALDIA_CONTEO IS NOT NULL
                GROUP BY SUM_CON_ANO, SUM_CON_PERIODO, CODIGO_CENTRO_POBLADO, CENTRO_POBLADO, LONGITUD, LATITUD, SUM_CON_ESTRATO, ALCALDIA_CONTEO
                ORDER BY SUM_CON_ESTRATO
                ) ESTRATIFICACION
                WHERE (USUARIOS - ALCALDIA_CONTEO) <> 0 -- CANTIDAD DE USUARIOS SUI DIFERENTES A LOS DE LA ALCALDIA
                ORDER BY 4
            '''
        elif opcion == 3:
            # Estratos registrados por el prestador sin registro en alcaldía
            sql = '''
                SELECT ESTRATIFICACION.*, (USUARIOS - ALCALDIA_CONTEO) AS VALIDACION FROM (
                SELECT SUM_CON_ANO, SUM_CON_PERIODO, CODIGO_CENTRO_POBLADO, CENTRO_POBLADO, LONGITUD, LATITUD, SUM_CON_ESTRATO, SUM(USUARIOS) AS USUARIOS, ALCALDIA_CONTEO
                FROM ESTRATIFICACION_ODS
                WHERE SUM_CON_ANO=:ANIO_ARG
                AND SUM_CON_PERIODO=:MES_ARG
                AND SUM_CON_SERVICIO=:SERVICIO_ARG
                AND (IDENTIFICADOR_EMPRESA=:EMPRESA_ARG OR 0 = :EMPRESA_ARG) --ID_ESP (REMPLAZAR EL 2103 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_DEPTO=:DPTO_ARG OR 0=:DPTO_ARG) --CODDEPTO (REMPLAZAR EL 8 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_MUNICIPIO=:MPO_ARG OR 'TODOS' = :MPO_ARG) --CODMPIO (REMPLAZAR EL 1 POR LA VARIABLE DEL FRONT)
                AND (SUM_CON_CNRPBLADO=:CPOBLADO_ARG OR 'TODOS' = :CPOBLADO_ARG) --CODCPOBLADO (REMPLAZAR EL 0 POR LA VARIABLE DEL FRONT)
                AND ALCALDIA_CONTEO IS NULL -- USUARIOS REGISTRADOS EN SUI SIN REGISTRO EN ALCALDIA
                GROUP BY SUM_CON_ANO, SUM_CON_PERIODO, CODIGO_CENTRO_POBLADO, CENTRO_POBLADO, LONGITUD, LATITUD, SUM_CON_ESTRATO, ALCALDIA_CONTEO
                ORDER BY SUM_CON_ESTRATO
                ) ESTRATIFICACION
                ORDER BY 4
            '''
        return self.db.engine.execute(text(sql), SERVICIO_ARG=servicio, ANIO_ARG=anio, MES_ARG=mes, EMPRESA_ARG=empresa, DPTO_ARG=dpto, MPO_ARG=mpio, CPOBLADO_ARG=cpoblado).fetchall()
